# This file is managed by Ansible: roles/debian/templates/bitcoind-knots-systemd.service.j2
# -----------------------------------------------------------------------------
# DO NOT EDIT THIS FILE MANUALLY.
# Changes will be overwritten by Ansible deployments.
#
# Options specified as arguments in ExecStart= override those in the config file.
#
# Reference:
#   https://github.com/bitcoinknots/bitcoin/blob/28.x-knots/contrib/init/bitcoind.service
# -----------------------------------------------------------------------------

# Homepage Dashboard Systemd Service Configuration
# ===============================================
# 
# This systemd service file manages the Homepage Dashboard application
# Homepage is a modern, fully static, fast, secure fully proxied, highly customizable 
# application dashboard with integrations for over 100 services.
#
# Service Management Commands:
# ---------------------------
# Enable and start service:
#   sudo systemctl enable homepage.service
#   sudo systemctl start homepage.service
#
# Check service status:
#   sudo systemctl status homepage.service
#
# Stop and disable service:
#   sudo systemctl stop homepage.service
#   sudo systemctl disable homepage.service
#
# Restart service:
#   sudo systemctl restart homepage.service
#
# Reload service configuration:
#   sudo systemctl daemon-reload
#   sudo systemctl reload homepage.service
#
# Log Management Commands:
# -----------------------
# View recent logs:
#   sudo journalctl -u homepage.service
#
# Follow logs in real-time:
#   sudo journalctl -u homepage.service -f
#
# View logs since last boot:
#   sudo journalctl -u homepage.service -b
#
# View logs for specific time range:
#   sudo journalctl -u homepage.service --since "1 hour ago"
#   sudo journalctl -u homepage.service --since "2023-01-01" --until "2023-01-02"
#
# Clear logs older than X days:
#   sudo journalctl --vacuum-time=30d
#
# Configuration:
# -------------
# Service runs as user: {{ homepage_user }}
# Working directory: /opt/{{ homepage_user }}/src
# Config directory: /data/{{ homepage_user }}/config
# Port: {{ homepage_port }}

[Unit]
Description=Homepage Dashboard Server
Documentation=https://gethomepage.dev/


# Service Dependencies
######################
# Depend on and start after network service is up
After=network.target network-online.target
Wants=network-online.target

[Service]

## Service Execution / Start
############################

Type=simple

# Environmental configuration
EnvironmentFile={{ homepage_config_file }}
Environment=HOMEPAGE_CONFIG_DIR={{ homepage_config_dir }}
Environment=PATH={{ homepage_home_dir }}/node_modules/.bin:{{ ansible_env.PATH }}

# The directory to run the ExecStart from
WorkingDirectory={{ homepage_home_dir }}/src-{{ homepage_release }}

# Start Homepage
# ExecStart=/usr/bin/node .next/standalone/server.js
ExecStart={{ homepage_home_dir }}/node_modules/.bin/pnpm start

ExecReload=/bin/kill -HUP $MAINPID

ReadWritePaths={{ homepage_home_dir }} {{ homepage_config_dir }}

# Restart and Failure Handling
Restart=on-failure
RestartSec=5
StartLimitBurst=3

# Service Timeouts and Monitoring
TimeoutStartSec=30
TimeoutStopSec=30

MemoryDenyWriteExecute=false

# Directory creation and permissions
####################################

# Run as {{ homepage_user }}:{{ homepage_group }}
User={{ homepage_user }}
Group={{ homepage_group }}

# Set permissions for the runtime directory
# /run/{{ homepage_user }}
RuntimeDirectory={{ homepage_user }}
RuntimeDirectoryMode=0750


# Logging to systemd
####################

# Send logs to stdout/stderr for systemd to capture
# Ensure these are NOT redirected to debug.log in your bitcoin.conf or ExecStart command
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ homepage_user }}



[Install]
WantedBy=multi-user.target