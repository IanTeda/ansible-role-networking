[Unit]
Description=I2P Router written in C++
Documentation=man:i2pd(1) https://i2pd.readthedocs.io/en/latest/

# Service Dependencies
######################
# Wait for tun0 to be up before starting
After=sys-subsystem-net-devices-tun0.device network-online.target

# Stop service if tun0 goes down
Requires=sys-subsystem-net-devices-tun0.device
BindsTo=sys-subsystem-net-devices-tun0.device

# Soft dependency - ensure network is fully operational before starting
Wants=network-online.target

[Service]
User={{ i2pd_user }}
Group={{ i2pd_group }}

Type=forking
ExecStart=/usr/bin/i2pd --daemon --service \
                        --conf=/etc/{{ i2pd_user }}/{{ i2pd_user }}.conf \
                        --tunconf=/etc/{{ i2pd_user }}/tunnels.conf \
                        --tunnelsdir=/etc/{{ i2pd_user }}/tunnels.conf.d \
                        --pidfile=/run/{{ i2pd_user }}/{{ i2pd_user }}.pid \

ExecReload=/bin/sh -c "kill -HUP $MAINPID"


# Directory creation and permissions
####################################

# Create and set permissions for runtime directory `/run/{{ i2pd_user }}` 
RuntimeDirectory={{ i2pd_user }}
RuntimeDirectoryMode=750

# Logging to systemd
####################

# Log to systemd journal
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ i2pd_user }}

PIDFile=/run/{{ i2pd_user }}/{{ i2pd_user }}.pid
### Uncomment, if auto restart needed
#Restart=on-failure

# Use SIGTERM to stop i2pd immediately.
# Some cleanup processes can delay stopping, so we set 30 seconds timeout and then SIGKILL i2pd.
KillSignal=SIGTERM
TimeoutStopSec=30s
SendSIGKILL=yes

# If you have the patience waiting 10 min on restarting/stopping it, uncomment this.
# i2pd stops accepting new tunnels and waits ~10 min while old ones do not die.
#KillSignal=SIGINT
#TimeoutStopSec=10m

# If you have problems with hanging i2pd, you can try increase this
LimitNOFILE=8192
# To enable write of coredump uncomment this
#LimitCORE=infinity

[Install]
WantedBy=multi-user.target