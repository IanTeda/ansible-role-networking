# ============================================================================ #
# OpenVPN Static UniFi VPN Route - systemd-networkd Route Template             #
# ============================================================================ #
# ⚠️ WARNING: This file is managed by Ansible - DO NOT EDIT MANUALLY!       ⚠️ 
# Any manual changes will be overwritten on the next Ansible run.
# Edit the template file or Ansible variables instead.
#
# file_path: roles/openvpn/templates/openvpn-static-unifi-vpn-route.network.j2
# deploy_path: /etc/systemd/network/10-{{ vpn_client_primary_network_interface }}-static-unifi-vpn-route.network
# =============================================================================
#
# This systemd-networkd configuration file creates a static route to solve
# an asymmetric routing problem.
#
# The problem occurs when this host is running an OpenVPN client. The VPN
# client sets the default route to go through the VPN tunnel (e.g., tun0).
# If another device on the local network (e.g., 192.168.1.x) tries to
# connect to this host, the reply packets are incorrectly sent through the
# VPN tunnel instead of back to the local network, because the destination
# (e.g. {{ networking_networks.unifi_vpn_client_subnet }} for a Unifi VPN client) is not on the immediate subnet.
#
# This static route forces any traffic destined for the UniFi VPN client subnet
# to be sent via the main LAN gateway, ensuring the reply follows the same
# path as the request.
#
# To confirm this solution, the following command was used:
#   ip route add {{ networking_networks.unifi_vpn_client_subnet }} via {{ networking_networks.lan_gateway_ip }} dev {{ vpn_client_primary_network_interface }}
#
# Generated by Ansible on {{ ansible_date_time.iso8601 }}
# Host: {{ ansible_fqdn }}
#
# -----------------------------------------------------------------------------

[Match]
Name={{ vpn_client_primary_network_interface }}

[Network]
DHCP=yes

[Route]
Gateway={{ networking_networks.lan_gateway_ip }}
Destination={{ networking_networks.unifi_vpn_client_subnet }}

[Link]
RequiredForOnline=routable